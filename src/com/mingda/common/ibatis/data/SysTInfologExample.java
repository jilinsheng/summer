package com.mingda.common.ibatis.data;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SysTInfologExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table SUMMER.SYS_T_INFOLOG
     *
     * @ibatorgenerated Fri Jul 24 14:47:41 CST 2009
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table SUMMER.SYS_T_INFOLOG
     *
     * @ibatorgenerated Fri Jul 24 14:47:41 CST 2009
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SUMMER.SYS_T_INFOLOG
     *
     * @ibatorgenerated Fri Jul 24 14:47:41 CST 2009
     */
    public SysTInfologExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SUMMER.SYS_T_INFOLOG
     *
     * @ibatorgenerated Fri Jul 24 14:47:41 CST 2009
     */
    protected SysTInfologExample(SysTInfologExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SUMMER.SYS_T_INFOLOG
     *
     * @ibatorgenerated Fri Jul 24 14:47:41 CST 2009
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SUMMER.SYS_T_INFOLOG
     *
     * @ibatorgenerated Fri Jul 24 14:47:41 CST 2009
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SUMMER.SYS_T_INFOLOG
     *
     * @ibatorgenerated Fri Jul 24 14:47:41 CST 2009
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SUMMER.SYS_T_INFOLOG
     *
     * @ibatorgenerated Fri Jul 24 14:47:41 CST 2009
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SUMMER.SYS_T_INFOLOG
     *
     * @ibatorgenerated Fri Jul 24 14:47:41 CST 2009
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SUMMER.SYS_T_INFOLOG
     *
     * @ibatorgenerated Fri Jul 24 14:47:41 CST 2009
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SUMMER.SYS_T_INFOLOG
     *
     * @ibatorgenerated Fri Jul 24 14:47:41 CST 2009
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table SUMMER.SYS_T_INFOLOG
     *
     * @ibatorgenerated Fri Jul 24 14:47:41 CST 2009
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andInfologIdIsNull() {
            addCriterion("INFOLOG_ID is null");
            return this;
        }

        public Criteria andInfologIdIsNotNull() {
            addCriterion("INFOLOG_ID is not null");
            return this;
        }

        public Criteria andInfologIdEqualTo(BigDecimal value) {
            addCriterion("INFOLOG_ID =", value, "infologId");
            return this;
        }

        public Criteria andInfologIdNotEqualTo(BigDecimal value) {
            addCriterion("INFOLOG_ID <>", value, "infologId");
            return this;
        }

        public Criteria andInfologIdGreaterThan(BigDecimal value) {
            addCriterion("INFOLOG_ID >", value, "infologId");
            return this;
        }

        public Criteria andInfologIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("INFOLOG_ID >=", value, "infologId");
            return this;
        }

        public Criteria andInfologIdLessThan(BigDecimal value) {
            addCriterion("INFOLOG_ID <", value, "infologId");
            return this;
        }

        public Criteria andInfologIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("INFOLOG_ID <=", value, "infologId");
            return this;
        }

        public Criteria andInfologIdIn(List values) {
            addCriterion("INFOLOG_ID in", values, "infologId");
            return this;
        }

        public Criteria andInfologIdNotIn(List values) {
            addCriterion("INFOLOG_ID not in", values, "infologId");
            return this;
        }

        public Criteria andInfologIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("INFOLOG_ID between", value1, value2, "infologId");
            return this;
        }

        public Criteria andInfologIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("INFOLOG_ID not between", value1, value2, "infologId");
            return this;
        }

        public Criteria andEmployeeIdIsNull() {
            addCriterion("EMPLOYEE_ID is null");
            return this;
        }

        public Criteria andEmployeeIdIsNotNull() {
            addCriterion("EMPLOYEE_ID is not null");
            return this;
        }

        public Criteria andEmployeeIdEqualTo(BigDecimal value) {
            addCriterion("EMPLOYEE_ID =", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdNotEqualTo(BigDecimal value) {
            addCriterion("EMPLOYEE_ID <>", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdGreaterThan(BigDecimal value) {
            addCriterion("EMPLOYEE_ID >", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("EMPLOYEE_ID >=", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdLessThan(BigDecimal value) {
            addCriterion("EMPLOYEE_ID <", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("EMPLOYEE_ID <=", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdIn(List values) {
            addCriterion("EMPLOYEE_ID in", values, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdNotIn(List values) {
            addCriterion("EMPLOYEE_ID not in", values, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EMPLOYEE_ID between", value1, value2, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EMPLOYEE_ID not between", value1, value2, "employeeId");
            return this;
        }

        public Criteria andLogtimeIsNull() {
            addCriterion("LOGTIME is null");
            return this;
        }

        public Criteria andLogtimeIsNotNull() {
            addCriterion("LOGTIME is not null");
            return this;
        }

        public Criteria andLogtimeEqualTo(Date value) {
            addCriterion("LOGTIME =", value, "logtime");
            return this;
        }

        public Criteria andLogtimeNotEqualTo(Date value) {
            addCriterion("LOGTIME <>", value, "logtime");
            return this;
        }

        public Criteria andLogtimeGreaterThan(Date value) {
            addCriterion("LOGTIME >", value, "logtime");
            return this;
        }

        public Criteria andLogtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("LOGTIME >=", value, "logtime");
            return this;
        }

        public Criteria andLogtimeLessThan(Date value) {
            addCriterion("LOGTIME <", value, "logtime");
            return this;
        }

        public Criteria andLogtimeLessThanOrEqualTo(Date value) {
            addCriterion("LOGTIME <=", value, "logtime");
            return this;
        }

        public Criteria andLogtimeIn(List values) {
            addCriterion("LOGTIME in", values, "logtime");
            return this;
        }

        public Criteria andLogtimeNotIn(List values) {
            addCriterion("LOGTIME not in", values, "logtime");
            return this;
        }

        public Criteria andLogtimeBetween(Date value1, Date value2) {
            addCriterion("LOGTIME between", value1, value2, "logtime");
            return this;
        }

        public Criteria andLogtimeNotBetween(Date value1, Date value2) {
            addCriterion("LOGTIME not between", value1, value2, "logtime");
            return this;
        }

        public Criteria andFamilyidIsNull() {
            addCriterion("FAMILYID is null");
            return this;
        }

        public Criteria andFamilyidIsNotNull() {
            addCriterion("FAMILYID is not null");
            return this;
        }

        public Criteria andFamilyidEqualTo(BigDecimal value) {
            addCriterion("FAMILYID =", value, "familyid");
            return this;
        }

        public Criteria andFamilyidNotEqualTo(BigDecimal value) {
            addCriterion("FAMILYID <>", value, "familyid");
            return this;
        }

        public Criteria andFamilyidGreaterThan(BigDecimal value) {
            addCriterion("FAMILYID >", value, "familyid");
            return this;
        }

        public Criteria andFamilyidGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FAMILYID >=", value, "familyid");
            return this;
        }

        public Criteria andFamilyidLessThan(BigDecimal value) {
            addCriterion("FAMILYID <", value, "familyid");
            return this;
        }

        public Criteria andFamilyidLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FAMILYID <=", value, "familyid");
            return this;
        }

        public Criteria andFamilyidIn(List values) {
            addCriterion("FAMILYID in", values, "familyid");
            return this;
        }

        public Criteria andFamilyidNotIn(List values) {
            addCriterion("FAMILYID not in", values, "familyid");
            return this;
        }

        public Criteria andFamilyidBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FAMILYID between", value1, value2, "familyid");
            return this;
        }

        public Criteria andFamilyidNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FAMILYID not between", value1, value2, "familyid");
            return this;
        }

        public Criteria andCodeIsNull() {
            addCriterion("CODE is null");
            return this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("CODE is not null");
            return this;
        }

        public Criteria andCodeEqualTo(String value) {
            addCriterion("CODE =", value, "code");
            return this;
        }

        public Criteria andCodeNotEqualTo(String value) {
            addCriterion("CODE <>", value, "code");
            return this;
        }

        public Criteria andCodeGreaterThan(String value) {
            addCriterion("CODE >", value, "code");
            return this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(String value) {
            addCriterion("CODE >=", value, "code");
            return this;
        }

        public Criteria andCodeLessThan(String value) {
            addCriterion("CODE <", value, "code");
            return this;
        }

        public Criteria andCodeLessThanOrEqualTo(String value) {
            addCriterion("CODE <=", value, "code");
            return this;
        }

        public Criteria andCodeLike(String value) {
            addCriterion("CODE like", value, "code");
            return this;
        }

        public Criteria andCodeNotLike(String value) {
            addCriterion("CODE not like", value, "code");
            return this;
        }

        public Criteria andCodeIn(List values) {
            addCriterion("CODE in", values, "code");
            return this;
        }

        public Criteria andCodeNotIn(List values) {
            addCriterion("CODE not in", values, "code");
            return this;
        }

        public Criteria andCodeBetween(String value1, String value2) {
            addCriterion("CODE between", value1, value2, "code");
            return this;
        }

        public Criteria andCodeNotBetween(String value1, String value2) {
            addCriterion("CODE not between", value1, value2, "code");
            return this;
        }

        public Criteria andEntityidIsNull() {
            addCriterion("ENTITYID is null");
            return this;
        }

        public Criteria andEntityidIsNotNull() {
            addCriterion("ENTITYID is not null");
            return this;
        }

        public Criteria andEntityidEqualTo(BigDecimal value) {
            addCriterion("ENTITYID =", value, "entityid");
            return this;
        }

        public Criteria andEntityidNotEqualTo(BigDecimal value) {
            addCriterion("ENTITYID <>", value, "entityid");
            return this;
        }

        public Criteria andEntityidGreaterThan(BigDecimal value) {
            addCriterion("ENTITYID >", value, "entityid");
            return this;
        }

        public Criteria andEntityidGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ENTITYID >=", value, "entityid");
            return this;
        }

        public Criteria andEntityidLessThan(BigDecimal value) {
            addCriterion("ENTITYID <", value, "entityid");
            return this;
        }

        public Criteria andEntityidLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ENTITYID <=", value, "entityid");
            return this;
        }

        public Criteria andEntityidIn(List values) {
            addCriterion("ENTITYID in", values, "entityid");
            return this;
        }

        public Criteria andEntityidNotIn(List values) {
            addCriterion("ENTITYID not in", values, "entityid");
            return this;
        }

        public Criteria andEntityidBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ENTITYID between", value1, value2, "entityid");
            return this;
        }

        public Criteria andEntityidNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ENTITYID not between", value1, value2, "entityid");
            return this;
        }
    }
}