/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.oa;

import java.io.IOException;
import java.io.PrintWriter;
import java.math.BigDecimal;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Session;
import org.hibernate.Transaction;

import com.mingda.common.SessionFactory;
import com.mingda.dao.NetTReceiveDAO;
import com.mingda.entity.NetTReceive;
import com.mingda.entity.SysTEmployee;

/**
 * MyEclipse Struts Creation date: 12-26-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class RecpitAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		response.setCharacterEncoding("GB18030");
		String noticeid = request.getParameter("noticeid");
		Session session = SessionFactory.getSession();
		HttpSession hsession = request.getSession();
		SysTEmployee employee = (SysTEmployee) hsession
				.getAttribute("employee");
		Transaction tx = session.beginTransaction();
		try {
			PrintWriter out = response.getWriter();
			NetTReceiveDAO recedao = new NetTReceiveDAO();
			NetTReceive netTReceive = recedao.findByNoticeId(noticeid, employee
					.getSysTOrganization().getOrganizationId());
			if (null != netTReceive) {
				if ("0".equals(netTReceive.getFlag())) {
					netTReceive.setPerson(new BigDecimal(employee
							.getEmployeeId()));
					netTReceive.setFlag("1");
					out.println("保存成功");
				} else {
					out.println("已经填写过了");
				}
			}
			tx.commit();
			out.close();
		} catch (RuntimeException re) {
			tx.rollback();
			re.printStackTrace();
		} catch (IOException e) {
			tx.rollback();
			e.printStackTrace();
		} finally {
			session.close();
		}
		return null;
	}
}