/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action;

import java.io.UnsupportedEncodingException;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.dom4j.Document;
import org.dom4j.DocumentHelper;
import org.dom4j.Element;
import org.hibernate.Transaction;

import com.mingda.common.SessionFactory;
import com.mingda.dao.SysTPrivilegeDAO;
import com.mingda.entity.SysTEmployee;
import com.mingda.entity.SysTPrivilege;

/**
 * MyEclipse Struts Creation date: 04-17-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 * @struts.action-forward name="menu" path="/page/menu.jsp"
 */
public class ReadMenuAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		SysTEmployee sysTEemployee = (SysTEmployee) request.getSession()
				.getAttribute("employee");
		// 如果session中没有employee对象则返回空页
		if (sysTEemployee == null) {
			return null;
		}
		Transaction tx = SessionFactory.getSession().beginTransaction();
		try {
			tx.begin();
			// 取出当前用户可以使用的系统菜单并发送到页面
			List sysmenu = new SysTPrivilegeDAO()
					.findBySysTEmployee(sysTEemployee);
			// 页面菜单生成
			// request.setAttribute("sysmenu", sysmenu);
			// 页面菜单生成
			// xml形式
			Document doc = DocumentHelper.createDocument();
			Element root = doc.addElement("div").addAttribute("id", "root")
					.addAttribute("class", "nav");
			Element parent = root.addElement("ul").addAttribute("id", "c0");
			Iterator it = sysmenu.iterator();
			while (it.hasNext()) {
				SysTPrivilege privilege = (SysTPrivilege) it.next();
				Element ul = (Element) doc.selectSingleNode("//ul[@id='c"
						+ privilege.getParentprivilegeid() + "']");

				int depth = privilege.getDepth().intValue();
				String classname = "Closed";
				String layer = "layer2";
				if (depth == 1) {
					layer = "layer1";
				} else {
					ul.addAttribute("class", classname);
					layer = "layer2";
				}
				if (depth == 1) {
				} else {
					ul.addAttribute("class", classname);
				}
				// onMouseOut="this.className='layer2'"
				// onmouseup="this.className='layer2'"
				// onMouseOver="this.className='layer3'"
				// onmousedown="this.className='layer3'"
				Element span = ul.addElement("li").addAttribute("id",
						"p" + privilege.getPrivilegeId()).addElement("span")
						.addAttribute("class", layer).addAttribute("onclick",
								"ChangeStatus(this)").addAttribute("style", "padding-left:"+depth*10+"px");
				if (span.attributeValue("class").equals("layer2")) {
					span.addAttribute("onmouseout", "this.className='layer2'")
							.addAttribute("onmouseup",
									"this.className='layer2'").addAttribute(
									"onmouseover", "this.className='layer3'")
							.addAttribute("onmousedown",
									"this.className='layer3'");
				}
				String url = privilege.getUrl();
				if (url == null || url.equals("") || url.equals("#")) {
					if (layer.equals("layer2")) {
						span.setText(privilege.getDisplayname());
					} else {
						span.setText(privilege.getDisplayname());
					}
				} else {
						span.addElement("a").addAttribute("href",
								url + "&strnav=" + privilege.getNav())
								.addAttribute("target", "opreratingzone").setText(
										privilege.getDisplayname());

				}
				ul.addElement("ul").addAttribute("id",
						"c" + privilege.getPrivilegeId());
			}
			Iterator its = root.selectNodes("//ul").iterator();
			while (its.hasNext()) {
				Element e = (Element) its.next();
				Element ep = e.getParent();
				if (e.elements().isEmpty()) {
					ep.remove(e);
				}
			}
			request.setAttribute("sysmenu", doc.getRootElement().asXML());
			tx.commit();
		} catch (RuntimeException e) {
			tx.rollback();
			e.printStackTrace();
		} finally {
			SessionFactory.closeSession();
		}
		// 转到菜单页
		return mapping.findForward("menunew");
	}
}