/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.organ;

import java.util.Iterator;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.Globals;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Session;

import com.mingda.common.SessionFactory;
import com.mingda.dao.SysTDictsortDAO;
import com.mingda.dao.SysTOrganizationDAO;
import com.mingda.entity.SysTDictionary;
import com.mingda.entity.SysTDictsort;
import com.mingda.entity.SysTOrganization;

/**
 * MyEclipse Struts Creation date: 09-25-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class OrganinitAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		String organizationId = request.getParameter("organizationId");
		String type = request.getParameter("type");

		Session session = SessionFactory.getSession();
		SysTOrganization organ = new SysTOrganization();
		SysTDictsortDAO dictdao = new SysTDictsortDAO();

		StringBuffer sb = new StringBuffer();

		try {
			if ("add".equals(type)) {
				organ.setParentorgid(organizationId);
				request.setAttribute("organ", organ);
				request.setAttribute("title", "增加子机构信息");

				SysTDictsort sysTDictsort = dictdao.findById(new Long(361));
				Set<SysTDictionary> set = sysTDictsort.getSysTDictionaries();
				Iterator<SysTDictionary> it = set.iterator();
				while (it.hasNext()) {
					SysTDictionary sysTDictionary = it.next();
					if(!"9004".equals(sysTDictionary.getDictionaryId().toString())){
					sb
							.append("<tr><th>"
									+ sysTDictionary.getItem()
									+ "</th><td>	<input style=\"width: 100%\" type=\"text\" name=\"a"
									+ sysTDictionary.getDictionaryId()
									+ "\" value=\"\"  /></td></tr>");}
				}
				request.setAttribute("html", sb.toString());

			} else if ("edit".equals(type)) {

				SysTOrganizationDAO odao = new SysTOrganizationDAO();
				organ = odao.findById(organizationId);
				request.setAttribute("organ", organ);
				request.setAttribute("title", "修改机构信息");

				SysTDictsort sysTDictsort = dictdao.findById(new Long(361));
				Set<SysTDictionary> set = sysTDictsort.getSysTDictionaries();
				Iterator<SysTDictionary> it = set.iterator();
				while (it.hasNext()) {
					SysTDictionary sysTDictionary = it.next();
					if(!"9004".equals(sysTDictionary.getDictionaryId().toString())){
					sb
							.append("<tr><th>"
									+ sysTDictionary.getItem()
									+ "</th><td>	<input style=\"width: 100%\" type=\"text\" name=\"a"
									+ sysTDictionary.getDictionaryId()
									+ "\" value=\""
									+ odao.getOrgExtValue(sysTDictionary
											.getDictionaryId().toString(),
											organizationId)
									+ "\"  /></td></tr>");
					}
				}
				request.setAttribute("html", sb.toString());

			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			session.close();
		}
		this.saveToken(request);
		Globals s;
		return mapping.findForward("organ");
	}
}