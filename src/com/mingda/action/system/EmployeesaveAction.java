/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.system;

import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Session;
import org.hibernate.Transaction;

import com.mingda.common.SessionFactory;

/**
 * MyEclipse Struts Creation date: 08-18-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class EmployeesaveAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try {
			request.setCharacterEncoding("utf-8");
		} catch (UnsupportedEncodingException e2) {
			e2.printStackTrace();
		}
		String organizationId = request.getParameter("organizationId");
		String employeeId = request.getParameter("employeeId");
		String account = request.getParameter("account");
		String password = request.getParameter("password");
		String postid = request.getParameter("postid");
		String name = request.getParameter("name");
		String[] roleids = request.getParameterValues("roleid");
		String type="0";
		Session session = SessionFactory.getSession();
		Connection con = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		String sql = "";
		try {
			con = session.connection();
			con.setAutoCommit(false);
			if (employeeId == null || employeeId.equals("")) {
				sql = "select xemployee_id.nextval from dual";
				ps = con.prepareStatement(sql);
				rs = ps.executeQuery();
				if (rs.next()) {
					employeeId = rs.getString(1);
				}

				sql = "insert into sys_t_employee  "
						+ "(employee_id, post_id, organization_id, account, password, isadmin)"
						+ " values  " + " ('" + employeeId + "', '" + postid
						+ "', '" + organizationId + "', '" + account + "', '"
						+ password + "', '0')";
				ps = con.prepareStatement(sql);
				ps.execute();

				sql = "insert into sys_t_empext (empext_id, employee_id,  name) values ('"
						+ employeeId
						+ "','"
						+ employeeId
						+ "', '"
						+ name
						+ "')";
				ps = con.prepareStatement(sql);
				ps.execute();

				String roleid = "'";
				for (int i = 0; i < roleids.length; i++) {
					roleid += roleids[i] + "','";
				}
				roleid += "'";
				sql = "insert into sys_t_emprole (employee_id, role_id) select '"
						+ employeeId
						+ "' , r.role_id from sys_t_role r where r.role_id in ("
						+ roleid + ")";
				ps = con.prepareStatement(sql);
				ps.execute();

			} else {
				type="1";
				sql = "update sys_t_employee set post_id = '" + postid
						+ "' where employee_id ='" + employeeId + "' ";
				ps = con.prepareStatement(sql);
				ps.execute();

				sql = "delete sys_t_emprole where employee_id = '" + employeeId
						+ "'";
				ps = con.prepareStatement(sql);
				ps.execute();

				String roleid = "'";
				for (int i = 0; i < roleids.length; i++) {
					roleid += roleids[i] + "','";
				}
				roleid += "'";
				sql = "insert into sys_t_emprole (employee_id, role_id) select '"
						+ employeeId
						+ "' , r.role_id from sys_t_role r where r.role_id in ("
						+ roleid + ")";
				ps = con.prepareStatement(sql);
				ps.execute();
			}
			con.commit();
		} catch (Exception e) {
			try {
				con.rollback();
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
		} finally {
			try {
				if (rs != null) {
					rs.close();
				}
				if (ps != null) {
					ps.close();
				}
				if (con != null) {
					con.close();
				}
				session.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		response.setContentType("text/html");
		response.setCharacterEncoding("GB18030");
		try {
			PrintWriter out = response.getWriter();
			out.write(type);
			out.flush();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}
}