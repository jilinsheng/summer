/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.system;

import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Transaction;

import com.mingda.common.SessionFactory;
import com.mingda.dao.SysTOrganizationDAO;
import com.mingda.entity.SysTEmployee;
import com.mingda.entity.SysTOrganization;

/**
 * MyEclipse Struts Creation date: 04-21-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class OrganizationInitAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		/* 页面传过来的url */
		List orglist = null;/* 当前机构和直属下级列表 */
		HttpSession httpsession = request.getSession();
		SysTEmployee sysTEmployee = (SysTEmployee) httpsession
				.getAttribute("employee");
		SysTOrganization sysTOrganization = sysTEmployee.getSysTOrganization();
		Transaction tx = SessionFactory.getSession().beginTransaction();
		try {
			SysTOrganizationDAO sysTOrganizationDAO = new SysTOrganizationDAO();
			orglist = sysTOrganizationDAO.findByParentId(sysTOrganization
					.getOrganizationId());
			tx.commit();
		} catch (RuntimeException e) {
			tx.rollback();
			e.printStackTrace();
		} finally {
			SessionFactory.closeSession();
		}
		String url = request.getParameter("url");
		if (url == null || url.equals("")) {
			url = "/db/page/system/employeelist.do";
		}
		request.setAttribute("url", url);
		request.setAttribute("orglist", orglist);
		return mapping.findForward("organization");
	}
}