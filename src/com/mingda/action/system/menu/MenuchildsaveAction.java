/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.system.menu;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Iterator;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.dom4j.Document;
import org.dom4j.Element;
import org.hibernate.Session;
import org.hibernate.Transaction;

import com.mingda.common.SessionFactory;
import com.mingda.common.log4j.Log4jApp;

/**
 * MyEclipse Struts Creation date: 09-23-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class MenuchildsaveAction extends Action {
	static Logger log = Logger.getLogger(MenuchildsaveAction.class);
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		String xmlstr = request.getParameter("xmlstr");
		String seq = request.getParameter("sequence");
		String pid = request.getParameter("pid");
		String temp = "";
		Document doc = null;

		Session session = SessionFactory.getSession();
		Transaction tx = session.beginTransaction();

		try {
			Connection con = session.connection();
			PreparedStatement ps = null;
			ResultSet rs = null;
			HashMap<String, String> menumap = new HashMap<String, String>();
			String sql = "";
			doc = org.dom4j.DocumentHelper.parseText(xmlstr);
			doc.setXMLEncoding("GB18030");
			Element root = doc.getRootElement();
			int i = 0;
			for (Iterator it = root.elementIterator(); it.hasNext();) {
				Element menu = (Element) it.next();
				String menuid = menu.getText().split(",")[0];
				String oldseq = menu.getText().split(",")[1];
				if (i < 10) {
					temp = seq + "0" + i + ".";
				} else {
					temp = seq + i + ".";
				}
				if (temp.indexOf(".") == 0) {

				} else {
					temp = "." + temp;
				}
				if (oldseq.equals(temp)) {

				} else {
					sql = "select p.privilege_id , p.sequence  from  sys_t_privilege p  where p.sequence like '"
							+ oldseq + "%'";
					Log4jApp.logger("¸üÐÂ²Ëµ¥Ë³ÐòÓï¾ä:   " + sql);
					ps = con.prepareStatement(sql);
					rs = ps.executeQuery();
					while (rs.next()) {
						String value = rs.getString(2);
						value = value.replace(oldseq, temp);
						menumap.put(rs.getString(1), value);
					}
				}
				i++;
			}
			for (Iterator m = menumap.keySet().iterator(); m.hasNext();) {
				String menuid = (String) m.next();
				String newseq = (String) menumap.get(menuid);
				sql = "update sys_t_privilege p set p.sequence ='" + newseq
						+ "' where p.privilege_id ='" + menuid + "'";
				Log4jApp.logger("¸üÐÂ²Ëµ¥Ë³ÐòÓï¾ä:   " + sql);
				ps = con.prepareStatement(sql);
				ps.execute();
				log.debug(sql);
			}
			tx.commit();
		} catch (Exception e) {
			tx.rollback();
			e.printStackTrace();
		} finally {
			session.close();
		}
		try {
			PrintWriter out = response.getWriter();
			out
					.println("<script>parent.parent.frames['leftFrame'].location.reload('menutree.do?menuid="
							+ pid
							+ "');parent.parent.frames['mainFrame'].location.reload('menudetail.jsp');</script>");
			out.flush();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}
}