/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.system.dictionary;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Iterator;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.dom4j.Attribute;
import org.dom4j.Document;
import org.dom4j.Element;

import com.mingda.action.report.ReportAction;
import com.mingda.common.dictionary.DictionaryHandle;
import com.mingda.entity.SysTDictionary;
import com.mingda.entity.SysTDictsort;

/**
 * MyEclipse Struts Creation date: 08-08-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class DicthandleAction extends Action {
	static Logger log = Logger.getLogger(DicthandleAction.class);
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try {
			request.setCharacterEncoding("utf-8");

			String model = request.getParameter("model");
			DictionaryHandle dh = new DictionaryHandle();
			SysTDictionary dictvalue = new SysTDictionary();
			String dsid = request.getParameter("dsid");
			if (model.equals("1")) {
				// 新增
				String dvname = request.getParameter("dvname");
				String sequence = request.getParameter("sequence");
				dictvalue.setItem(dvname);
				SysTDictsort ds = new SysTDictsort();
				ds.setDictsortId(new Long(dsid));
				dictvalue.setSysTDictsort(ds);
				dictvalue.setSequence(new Long(sequence));
				dictvalue.setStatus("1");
				dictvalue = dh.saveDictvalue(dictvalue);
			} else if (model.equals("2")) {
				// 改名称
				String dvid = request.getParameter("dvid");
				String itname = request.getParameter("itname");
				dictvalue.setDictionaryId(new Long(dvid));
				dictvalue.setItem(itname);
				dictvalue = dh.saveDictvalue(dictvalue);
			} else if (model.equals("3")) {
				// 开停状态
				String dvid = request.getParameter("dvid");
				String status = request.getParameter("status");
				dictvalue.setDictionaryId(new Long(dvid));
				dictvalue.setStatus(status);
				dictvalue = dh.saveDictvalue(dictvalue);
			}

			Document dict = (Document) this.servlet.getServletContext()
					.getAttribute("dictionary");

			if (!model.equals("1")) {
				Element dv = (Element) dict
						.selectSingleNode("//DICTSORT/DICTVALUE[@id='"
								+ dictvalue.getDictionaryId() + "']");
				dv.setText(dictvalue.getItem());
				Iterator ait = dv.attributeIterator();
				while (ait.hasNext()) {
					Attribute a = (Attribute) ait.next();
					if (a.getName().equals("status")) {
						a.setValue(dictvalue.getStatus().toString());
					}
				}
				log.debug("a2     " + dv.attributeValue("status"));
			} else {
				// log.debug(dictvalue.getDictionaryId()+"
				// "+dictvalue.getItem()+" "+dictvalue.getSequence());
				Element ds = (Element) dict.selectSingleNode("//DICTSORT[@id='"
						+ dsid + "']");
				ds.addElement("DICTVALUE").addAttribute("id",
						dictvalue.getDictionaryId().toString()).addAttribute(
						"dsid", dsid)
						.addAttribute("title", dictvalue.getItem())
						.addAttribute("status", "1").addAttribute("sequence",
								dictvalue.getSequence().toString()).setText(
								dictvalue.getItem());

			}
			this.servlet.getServletContext().setAttribute("dictionary", dict);
			response.setContentType("text/html;charset=GB18030");
			PrintWriter out = response.getWriter();
			out.println("ok");
			out.flush();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
		}

		return null;
	}
}