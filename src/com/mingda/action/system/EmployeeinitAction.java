/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.system;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.dom4j.Document;
import org.dom4j.DocumentHelper;
import org.dom4j.Element;
import org.hibernate.Session;

import com.mingda.common.SessionFactory;
import com.mingda.dao.SysTEmployeeDAO;
import com.mingda.dao.SysTPostDAO;
import com.mingda.dao.SysTRoleDAO;
import com.mingda.entity.SysTEmployee;
import com.mingda.entity.SysTPost;
import com.mingda.entity.SysTRole;

/**
 * MyEclipse Struts Creation date: 08-18-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class EmployeeinitAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		Session session = SessionFactory.getSession();
		String empid = request.getParameter("empid");
		String organizationId = request.getParameter("organizationId");

		SysTEmployeeDAO sysTEmployeeDAO = new SysTEmployeeDAO();

		SysTEmployee sysTEmployee = null;
		if (empid == null || empid.equals("")) {
			empid = "";
		} else {
			sysTEmployee = sysTEmployeeDAO.findById(new Long(empid));
		}

		SysTPostDAO SysTPostDAO = new SysTPostDAO();
		List postlist = SysTPostDAO.findAll();
		SysTRoleDAO sysTRoleDAO = new SysTRoleDAO();
		List rolelist = sysTRoleDAO.findAll();

		Document doc = DocumentHelper.createDocument();
		Element root = doc.addElement("form").addAttribute("id", "inputForm");
		root.addElement("input").addAttribute("type", "hidden").addAttribute(
				"name", "organizationId").addAttribute("value", organizationId);
		root.addElement("input").addAttribute("type", "hidden").addAttribute(
				"name", "employeeId").addAttribute("value", empid);
		Element table = root.addElement("table").addAttribute("border", "0");
		if (sysTEmployee == null) {
			Element tr = table.addElement("tr");
			tr.addElement("td").setText("登陆名:");
			tr.addElement("td").addElement("input")
					.addAttribute("type", "text").addAttribute("value", "")
					.addAttribute("name", "account").addAttribute("onchange","checkaccount(this)");

			tr = table.addElement("tr");
			tr.addElement("td").setText("密码:  ");
			tr.addElement("td").addElement("input").addAttribute("type",
					"password").addAttribute("readonly", "true").addAttribute(
					"value", "1234567").addAttribute("name", "password");

			tr = table.addElement("tr");
			tr.addElement("td").setText("姓名:  ");
			tr.addElement("td").addElement("input")
					.addAttribute("type", "text").addAttribute("value", "")
					.addAttribute("name", "name");
			tr = table.addElement("tr");

			tr.addElement("td").setText("岗位:  ");
			Element postselect = tr.addElement("td").addElement("select")
					.addAttribute("name", "postid");
			Iterator postit = postlist.iterator();
			while (postit.hasNext()) {
				SysTPost sysTPost = (SysTPost) postit.next();
				postselect.addElement("option").addAttribute("value",
						sysTPost.getPostId().toString()).setText(
						sysTPost.getName());
			}

			tr = table.addElement("tr");
			tr.addElement("td").setText("角色:  ");
			Element roleselect = tr.addElement("td");
			Iterator roleit = rolelist.iterator();
			while (roleit.hasNext()) {
				SysTRole sysTRole = (SysTRole) roleit.next();
				Element input = roleselect.addElement("input").addAttribute(
						"type", "checkbox").addAttribute("name", "roleid")
						.addAttribute("value", sysTRole.getRoleId().toString());
				input.setText(sysTRole.getName());
				roleselect.addElement("br");
			}

		} else {
			Element tr = table.addElement("tr");
			tr.addElement("td").setText("登陆名:");
			tr.addElement("td").setText(sysTEmployee.getAccount());

			tr = table.addElement("tr");
			tr.addElement("td").setText("姓名:  ");
			tr.addElement("td").setText(sysTEmployee.getSysTEmpext().getName());
			tr = table.addElement("tr");
			tr.addElement("td").setText("岗位:  ");
			Element postselect = tr.addElement("td").addElement("select")
					.addAttribute("name", "postid");
			Iterator postit = postlist.iterator();
			while (postit.hasNext()) {
				SysTPost sysTPost = (SysTPost) postit.next();
				if (sysTEmployee.getSysTPost().getPostId().longValue() == sysTPost
						.getPostId().longValue()) {
					postselect.addElement("option").addAttribute("selected",
							"selected").addAttribute("value",
							sysTPost.getPostId().toString()).setText(
							sysTPost.getName());
				} else {
					postselect.addElement("option").addAttribute("value",
							sysTPost.getPostId().toString()).setText(
							sysTPost.getName());
				}
			}

			tr = table.addElement("tr");
			tr.addElement("td").setText("角色:  ");
			Element roleselect = tr.addElement("td");
			Iterator roleit = rolelist.iterator();
			Set roleset = sysTEmployee.getSysTRoles();
			while (roleit.hasNext()) {
				SysTRole sysTRole = (SysTRole) roleit.next();
				boolean flag = false;
				Iterator rolesetit = roleset.iterator();
				while (rolesetit.hasNext()) {
					SysTRole esysTRole = (SysTRole) rolesetit.next();
					if (esysTRole.getRoleId().longValue() == sysTRole
							.getRoleId().longValue()) {
						flag = true;
					}
				}
				Element input = roleselect.addElement("input").addAttribute(
						"type", "checkbox").addAttribute("name", "roleid")
						.addAttribute("value", sysTRole.getRoleId().toString());
				input.setText(sysTRole.getName());
				roleselect.addElement("br");
				if (flag) {
					input.addAttribute("checked", "checked");
				}
			}
		}
		session.close();
		root.addElement("button").addAttribute("id","b").addAttribute("class", "btn").addAttribute(
				"onclick", "save()").setText("保存");
		response.setContentType("text/html");
		response.setCharacterEncoding("GB18030");

		try {
			PrintWriter out = response.getWriter();
			out.write(root.asXML());
			out.flush();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
		}

		return null;
	}
}