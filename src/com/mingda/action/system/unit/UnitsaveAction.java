/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.system.unit;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Session;
import org.hibernate.Transaction;

import com.mingda.common.SessionFactory;
import com.mingda.dao.SysTUnitDAO;
import com.mingda.entity.SysTUnit;

/**
 * MyEclipse Struts Creation date: 09-03-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class UnitsaveAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		Session session = SessionFactory.getSession();
		String address = request.getParameter("address");
		String detail = request.getParameter("detail");
		String industry = request.getParameter("industry");
		String runstate = request.getParameter("runstate");
		String unitflag = "1";
		String unitname = request.getParameter("unitname");
		String unittype = request.getParameter("unittype");
		Transaction tx = session.beginTransaction();
		SysTUnit unit = null;
		try {
			SysTUnitDAO unitdao = new SysTUnitDAO();
			List list = unitdao.findByUnitname(unitname);
			if (null != list&&list.size()>0) {
				unit = (SysTUnit) list.get(0);
				request.setAttribute("str", "此单位已经存在");
			} else {
				unit = new SysTUnit();
				unit.setAddress(address);
				unit.setDetail(detail);
				unit.setIndustry(new Long(industry));
				unit.setRunstate(new Long(runstate));
				unit.setUnitflag(unitflag);
				unit.setUnitname(unitname);
				unit.setUnittype(new Long(unittype));
				unit = unitdao.save(unit);
				tx.commit();
			}
		} catch (Exception ex) {
			tx.rollback();
			ex.printStackTrace();
		} finally {
			session.close();
		}
		request.setAttribute("unit", unit);
		return mapping.findForward("unit");
	}
}