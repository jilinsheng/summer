/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.info.editor;

import java.io.PrintWriter;
import java.util.Iterator;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.dom4j.Document;
import org.dom4j.Element;

import com.mingda.common.ConstantDefine;
import com.mingda.common.SessionFactory;
import com.mingda.common.classtype.ClassHandle;
import com.mingda.common.log4j.Log4jApp;
import com.mingda.common.node.TreeHandle;
import com.mingda.common.node.TreeHandleImpl;
import com.mingda.common.page.PageView;
import com.mingda.entity.SysTEmployee;

/**
 * MyEclipse Struts Creation date: 06-21-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class EditorInfoCardLeafAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	static Logger log = Logger.getLogger(EditorInfoCardLeafAction.class);
	@SuppressWarnings({ "unused", "rawtypes" })
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession httpsession = request.getSession();
		SysTEmployee employee = (SysTEmployee) httpsession
				.getAttribute("employee");
		Long empid = employee.getEmployeeId();
		String code = request.getParameter("code");
		String codeId = request.getParameter("codeId");
		Document dictionary = (Document) this.servlet.getServletContext()
				.getAttribute("dictionary");

		// 从服务器中取出结构xml
		Document treedoc = (Document) servlet.getServletContext().getAttribute(
				"tree");
		TreeHandle tree = new TreeHandleImpl(treedoc);

		PageView pv = new PageView();
		ClassHandle ch = new ClassHandle();
		String str = "";
		try {
			if (code.equals("FAMILY")) {
				Document famdoc = tree.selectSingleEntity("FAMILY",
						(codeId == null || codeId.equals("")) ? null
								: new Long(codeId));
				String masterid = famdoc.selectSingleNode(
						"//FAMILY/property[@column='MASTERID']").getText();
				famdoc = pv.writeFormbyXML(famdoc, dictionary, 1);
				str = "<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">"
						+ "<tr><td>"
						+ "<form action=\"/db/page/info/familychild/FamilyChildSaveServlet\"  id=\"inputForm\" method=\"post\">"
						+ "<table class=\"table1\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"1\" bordercolordark=\"#FFFFFF\" bordercolorlight=\"#CCCCCC\">"
						+ famdoc.asXML()
						+ "</table><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
						+ "<span id=\"savebnt\"><input type=\"button\" value=\"保存\" onclick=\"save('inputForm')\" />"
						+ "&nbsp;&nbsp;&nbsp;&nbsp;<button onclick=\"parentClose()\">退出而不保存信息</button></span><span id=\"divResult\" style=\"color:red\"></span>"
						+ "</p></form></td><td valign=\"top\" align=\"left\" width=\"100\">"
						+ "</td></tr></table>";
			} else if (code.equals("MEMBER")) {
				Document memdoc = tree.selectSingleEntity("MEMBER",
						(codeId == null || codeId.equals("")) ? null
								: new Long(codeId));
				log.debug(memdoc.asXML());
				String value = memdoc.selectSingleNode(
						"//MEMBER/property[@column='RELMASTER']").getText();
				memdoc = pv.writeFormbyXML(memdoc, dictionary, 1);
				log.debug(memdoc.asXML());
				// 删除多余的与户主关系
				if (value.equals(ConstantDefine.RELMASTER)) {
					Element relmaster = (Element) memdoc.selectSingleNode(
							"//tr/td/select/option[@value='"
									+ ConstantDefine.RELMASTER + "']").clone();
					Element relmasters = (Element) memdoc
							.selectSingleNode("//tr/td/select[@name='MEMBER/RELMASTER']");
					Iterator it = relmasters.elementIterator();
					while (it.hasNext()) {
						Element element = (Element) it.next();
						relmasters.remove(element);
					}
					relmasters.add(relmaster);
				} else {
					Element relmaster = (Element) memdoc
							.selectSingleNode("//tr/td/select/option[@value='"
									+ ConstantDefine.RELMASTER + "']");
					Element relmasters = (Element) memdoc
							.selectSingleNode("//tr/td/select[@name='MEMBER/RELMASTER']");
					relmasters.remove(relmaster);
				}
				// 删除多余的与户主关系
				str = "<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">"
						+ "<tr><td>"
						+ "<form action=\"/db/page/info/familychild/FamilyChildSaveServlet\"  id=\"inputForm\" method=\"post\">"
						+ "<table class=\"table1\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"1\" bordercolordark=\"#FFFFFF\" bordercolorlight=\"#CCCCCC\">"
						+ memdoc.asXML()
						+ "</table><p>"
						+ "<span id=\"savebnt\"><input type=\"button\" value=\"保存\" onclick=\"save('inputForm')\" />"
						+ "&nbsp;&nbsp;&nbsp;&nbsp;<button onclick=\"parentClose()\">退出而不保存信息</button></span><span id=\"divResult\" style=\"color:red\"></span>"
						+ "</p></form></td><td valign=\"top\" align=\"left\" width=\"100\">"
						+ "<iframe id=\"inch\" name=\"inch\" scrolling=\"no\" src=\"/db/page/info/editor/inch.jsp?memberId="
						+ codeId
						+ "\" width=\"110\" height=\"180\" frameborder=\"0\"></iframe>"
						+ "</td></tr></table>";
			} else if (code.equals("FAMILYCLASS")) {
				Document familyclass = tree.selectSingleEntity("FAMILYCLASS",
						new Long(codeId));
				Document famdoc = familyclass;
				String id = familyclass.selectSingleNode(
						"//FAMILYCLASS/property[@column='FAMILY_ID']")
						.getText();
				familyclass = tree.saveEntity(ch.getClassType(familyclass, id,
						"FAMILYCLASS"), empid);
				familyclass = pv.writeTablebyXML(familyclass, dictionary, 1);
				Iterator it = familyclass.getRootElement().elementIterator();
				while (it.hasNext()) {
					Element tr = (Element) it.next();
					Element td = (Element) tr.elements().get(1);
					Element td0 = (Element) tr.elements().get(0);
					Element span = (Element) td.elements().get(0);// 分类值
					td0.addAttribute("width", "200px");
					Element temp = (Element) famdoc
							.selectSingleNode("//FAMILYCLASS/property[@title='"
									+ td0.getText() + "']");
					String column = temp.attributeValue("column");
					if (span.getText().equals(ConstantDefine.CLASSSTATUS_NOCHN)) {
						familyclass.getRootElement().remove(tr);
					} else if (span.getText().equals(
							ConstantDefine.CLASSSTATUS_COMMITCHN)) {
						td.remove(span);
						td.addElement("img").addAttribute("src",
								"/db/page/images/quest.gif").addAttribute(
								"alt", "未核实").addAttribute(
								"onclick",
								"ClassCommit(this,'FAMILYCLASS'," + id + ",'"
										+ column + "')");
					} else if (span.getText().equals("280")) {
						td.remove(span);
						td.addElement("img").addAttribute("src",
								"/db/page/images/right.gif").addAttribute(
								"alt", "已核实");
					} else {
						familyclass.getRootElement().remove(tr);
					}
				}
				str = "<table width=\"100%\" border=\"1\" class=\"table1\" cellpadding=\"0\" cellspacing=\"0\">"
						+ familyclass.getRootElement().asXML() + "</table>";
				Log4jApp.logger("家庭分类页面代码:"+str);
			} else if (code.equals("MEMBERCLASS")) {
				Document memberclass = tree.selectSingleEntity("MEMBERCLASS",
						new Long(codeId));
				String id = memberclass.selectSingleNode(
						"//MEMBERCLASS/property[@column='MEMBER_ID']")
						.getText();
				memberclass = tree.saveEntity(ch.getClassType(memberclass, id,
						"MEMBERCLASS"), empid);
				memberclass = pv.writeTablebyXML(memberclass, dictionary, 1);
				Iterator it = memberclass.getRootElement().elementIterator();
				while (it.hasNext()) {
					Element tr = (Element) it.next();
					Element td = (Element) tr.elements().get(1);
					Element td0 = (Element) tr.elements().get(0);
					Element span = (Element) td.elements().get(0);// 分类值
					td0.addAttribute("width", "200px");
					if (span.getText().equals(ConstantDefine.CLASSSTATUS_NOCHN)) {
						memberclass.getRootElement().remove(tr);
					} else if (span.getText().equals(
							ConstantDefine.CLASSSTATUS_COMMITCHN)) {
						td.remove(span);
						td.addElement("img").addAttribute("src",
								"/db/page/images/quest.gif").addAttribute(
								"alt", "未确认");
					} else if (span.getText().equals("280")) {
						td.remove(span);
						td.addElement("img").addAttribute("src",
								"/db/page/images/right.gif").addAttribute(
								"alt", "已确认");
					} else {
						memberclass.getRootElement().remove(tr);
					}
				}
				str = "<table width=\"100%\" border=\"1\" class=\"table1\" cellpadding=\"0\" cellspacing=\"0\">"
						+ memberclass.getRootElement().asXML() + "</table>";
				Log4jApp.logger("成员分类页面代码:"+str);
			} else if (code.equals("PAPERS")) {
				str = "<iframe frameborder=\"0\" id=\"upload\" name=\"upload\" height=\"100%\" width=\"100%\" src=\"/db/page/info/editor/uploadinit.do?codeId="
						+ codeId + "&code=" + code + "\"></iframe>";
			} else if (code.equals("ANNEX")) {
				str = "<iframe frameborder=\"0\" id=\"upload\" name=\"upload\" height=\"100%\" width=\"100%\" src=\"/db/page/info/editor/uploadinit.do?codeId="
						+ codeId + "&code=" + code + "\"></iframe>";
			} else {
				Document doc = tree.selectSingleEntity(code, new Long(codeId));
				doc = pv.writeFormbyXML(doc, dictionary, 1);
				str = "<form action=\"/db/page/info/familychild/FamilyChildSaveServlet\" enctype=\"multipart/form-data\" id=\"inputForm\" method=\"post\">"
						+ ""
						+ "<table class=\"table1\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"1\" bordercolordark=\"#FFFFFF\" bordercolorlight=\"#CCCCCC\">"
						+ doc.getRootElement().asXML()
						+ "</table><p>"
						+ "<span id=\"savebnt\"><input type=\"button\" value=\"保存\" onclick=\"save('inputForm')\" />"
						+ "&nbsp;&nbsp;&nbsp;&nbsp;<button onclick=\"parentClose()\">退出而不保存信息</button></span><span id=\"divResult\" style=\"color:red\"></span>"
						+ "</p></form>";
			}
			PrintWriter out = response.getWriter();
			response.setCharacterEncoding("GB18030");
			response.setContentType("text/html");
			out.write(str);
			out.flush();
			out.close();
		} catch (Exception e) {
			e.printStackTrace();
		}finally{
			SessionFactory.closeSession();
		}
		return null;
	}
}