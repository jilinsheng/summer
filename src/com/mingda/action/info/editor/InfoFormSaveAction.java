/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.info.editor;

import java.util.Enumeration;
import java.util.Iterator;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.dom4j.Document;
import org.dom4j.DocumentHelper;
import org.dom4j.Element;

import com.mingda.common.node.TreeHandle;
import com.mingda.common.node.TreeHandleImpl;
import com.mingda.entity.SysTEmployee;

/**
 * MyEclipse Struts Creation date: 06-21-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class InfoFormSaveAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@SuppressWarnings("rawtypes")
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession httpsession =request.getSession();
		SysTEmployee employee =(SysTEmployee) httpsession.getAttribute("employee");
		Long empid=employee.getEmployeeId();
		Enumeration enumeration = request.getParameterNames();
		Document doc = DocumentHelper.createDocument();
		doc.setXMLEncoding("GB18030");
		Element root = doc.addElement("ROOT");
		while (enumeration.hasMoreElements()) {
			String tagName = enumeration.nextElement().toString();
			String tagValue = request.getParameter(tagName);
			// 分解html标签形成xml
			String[] tagNames = tagName.split("/");
			String name0 = tagNames[0];
			String name1 = tagNames[1];
			Iterator it = root.elementIterator(name0);
			if (it.hasNext()) {
				Element p = (Element) it.next();
				Element c = p.addElement("property");
				c.addAttribute("column", name1);
				c.setText(tagValue);
			} else {
				Element p = root.addElement(name0);
				Element c = p.addElement("property");
				c.addAttribute("column", name1);
				c.setText(tagValue);
			}
		}
		
		//从服务器中取出结构xml
		Document treedoc = (Document) servlet.getServletContext()
		.getAttribute("tree");
		TreeHandle treehandle = new TreeHandleImpl(treedoc);
		
		doc = treehandle.saveEntity(doc,empid);
		String familyid = (doc
				.selectSingleNode("//FAMILY/property[@column='FAMILY_ID']")
				.getText());
		request.setAttribute("code", "FAMILY");
		request.setAttribute("entityId", familyid);
		return mapping.findForward("familyinfocard");
	}
}