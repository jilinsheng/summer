/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.info.card;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Iterator;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.dom4j.Document;
import org.dom4j.Element;

import com.mingda.common.ConstantDefine;
import com.mingda.common.classtype.ClassHandle;
import com.mingda.common.node.TreeHandle;
import com.mingda.common.node.TreeHandleImpl;
import com.mingda.common.page.PageView;

/**
 * MyEclipse Struts Creation date: 06-23-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class GetMemberClassAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@SuppressWarnings("rawtypes")
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		Document dictionary = (Document) servlet.getServletContext()
				.getAttribute("dictionary");
		response.setContentType("text/html");
		response.setCharacterEncoding("GB18030");

		String nodeName = request.getParameter("nodeName");
		String nodeId = request.getParameter("nodeId");

		PageView pv = new PageView();
		ClassHandle ch= new ClassHandle();
		
		Document treedoc = (Document) servlet.getServletContext()
		.getAttribute("tree");
		TreeHandle tree = new TreeHandleImpl(treedoc);

		try {
			// 分类信息 调整
			Document familyclass = pv.writeTablebyXML(ch.getClassType( tree.selectEntities(nodeName,
					new Long(nodeId)),nodeId,nodeName), dictionary, 1);
			Iterator it = familyclass.getRootElement().elementIterator();
			while (it.hasNext()) {
				Element tr = (Element) it.next();
				Element td = (Element) tr.elements().get(1);
				if (td.getText().equals(ConstantDefine.CLASSSTATUS_NOCHN)) {
					familyclass.getRootElement().remove(tr);
				} else if (td.getText().equals(ConstantDefine.CLASSSTATUS_COMMITCHN)) {
					td.setText("");
					td.addElement("img").addAttribute("src",
							"/db/page/images/quest.gif").addAttribute(
							"alt", "未确认");
				} else if (td.getText().equals(ConstantDefine.CLASSSTATUS_YESCHN)) {
					td.setText("");
					td.addElement("img").addAttribute("src",
							"/db/page/images/right.gif").addAttribute(
							"alt", "已确认");
				} else {
					familyclass.getRootElement().remove(tr);
				}
			}
			// 分类信息 调整

			PrintWriter out = response.getWriter();
			out.write(familyclass.getRootElement().asXML());
			out.flush();
			out.close();

		} catch (IOException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}
}