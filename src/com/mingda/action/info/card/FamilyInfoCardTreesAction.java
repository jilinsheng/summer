/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.info.card;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Iterator;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.dom4j.Document;
import org.dom4j.DocumentHelper;
import org.dom4j.Element;

import com.mingda.common.node.TreeHandle;
import com.mingda.common.node.TreeHandleImpl;
import com.mingda.common.page.PageView;

/**
 * MyEclipse Struts Creation date: 06-21-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class FamilyInfoCardTreesAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@SuppressWarnings("rawtypes")
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		response.setContentType("text/html");
		response.setCharacterEncoding("GB18030");

		String nodeName = request.getParameter("nodeName");
		String nodeId = request.getParameter("nodeId");
		
		Document treedoc = (Document) servlet.getServletContext()
		.getAttribute("tree");
		TreeHandle th = new TreeHandleImpl(treedoc);

		// 创建文档
		Document doc = DocumentHelper.createDocument();
		// 设置XML编码
		doc.setXMLEncoding("GB18030");
		// 添加根节点
		Element root = doc.addElement("ul");

		try {
			Document temp = th.selectEntities(nodeName, new Long(nodeId));
			PrintWriter out = response.getWriter();
			Element docs =temp.getRootElement();
			Document dictionary = (Document) this.servlet.getServletContext().getAttribute("dictionary");
			PageView pv =new PageView();
			if (!docs.selectNodes("//" + nodeName + "/@caption").isEmpty()) {
				Iterator it = docs.elementIterator();
				while (it.hasNext()) {
					Element tempp = (Element) it.next();
					Iterator tempcit = tempp.elementIterator();
					String pk = "";
					String caption ="";
					while (tempcit.hasNext()) {
						Element tempc = (Element) tempcit.next();
						if (tempc.attribute("isprimary") != null
								&& tempc.attributeValue("isprimary").equals(
										"true")) {
							pk = tempc.getText();
						}
						if(tempc.attribute("iscaption")!=null&&tempc.attributeValue("iscaption").equals("1")){
							if(tempc.attribute("dicsort")!=null){
								caption += pv.getDictionartHandle().getDictsortToValue(dictionary,tempc.getText())+" ";
							}else{
								caption +=tempc.getText()+" ";
							}
						}
					}
					Element li = root.addElement("li");// 添加li
					li.addAttribute("class", "Closed");
					Element img = li.addElement("img");// 添加图像标签
					img.addAttribute("onclick",
							"javascript:ChangeStatus(this,'" + nodeName
									+ "','ENTITY','" + pk + "');");
					img.addAttribute("class", "s");
					img.addAttribute("src", "/db/page/images/tree/s.gif");
					Element a = li.addElement("span");
					a.addAttribute("onclick", "viewNode('" + nodeName + "',"
							+ pk + "," + nodeId + ")");
					a.setText(caption);
					a.addAttribute("style", "cursor:hand");
				}
			}
			out.println(root.asXML());
			out.flush();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}
}