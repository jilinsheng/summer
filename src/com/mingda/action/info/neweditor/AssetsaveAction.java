/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.info.neweditor;

import java.io.IOException;
import java.io.PrintWriter;
import java.math.BigDecimal;
import java.sql.SQLException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.ibatis.sqlmap.client.SqlMapClient;
import com.mingda.common.ibatis.SqlMapper;
import com.mingda.common.ibatis.dao.InfoTAssetDAO;
import com.mingda.common.ibatis.data.InfoTAsset;

/**
 * MyEclipse Struts Creation date: 04-15-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class AssetsaveAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		SqlMapClient client = SqlMapper.getSqlMapper();
		try {
			InfoTAssetDAO assetdao = new InfoTAssetDAO(client);

			client.startTransaction();

			InfoTAsset infoTAsset = new InfoTAsset();

			String assetId = request.getParameter("assetId");

			if (null == assetId || "".equals(assetId)) {

			} else {
				infoTAsset.setAssetId(new BigDecimal(assetId));
			}

			String familyId = request.getParameter("familyId");
			infoTAsset.setFamilyId(new BigDecimal(familyId));

			String farmland = request.getParameter("farmland");
			infoTAsset.setFarmland(new BigDecimal(farmland));

			String paddyfield = request.getParameter("paddyfield");
			infoTAsset.setPaddyfield(new BigDecimal(paddyfield));

			String glebe = request.getParameter("glebe");
			infoTAsset.setGlebe(new BigDecimal(glebe));

			String ownerhouse = request.getParameter("ownerhouse");
			infoTAsset.setOwnerhouse(new BigDecimal(ownerhouse));

			String roomcnt = request.getParameter("roomcnt");
			infoTAsset.setRoomcnt(new BigDecimal(roomcnt));

			String buildarea = request.getParameter("buildarea");
			infoTAsset.setBuildarea(new BigDecimal(buildarea));

			String struct = request.getParameter("struct");
			infoTAsset.setStruct(new BigDecimal(struct));

			String repose = request.getParameter("repose");
			infoTAsset.setRepose(repose);

			String producergoods = request.getParameter("producergoods");
			infoTAsset.setProducergoods(new BigDecimal(producergoods));

			String animal = request.getParameter("animal");
			infoTAsset.setAnimal(new BigDecimal(animal));

			String farmmachine = request.getParameter("farmmachine");
			infoTAsset.setFarmmachine(new BigDecimal(farmmachine));

			String other = request.getParameter("other");
			infoTAsset.setOther(other);

			String estimation = request.getParameter("estimation");
			infoTAsset.setEstimation(new BigDecimal(estimation));

			if (null == infoTAsset.getAssetId()) {
				assetdao.insert(infoTAsset);
			} else {
				assetdao.update(infoTAsset);
			}

			client.commitTransaction();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				client.endTransaction();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		try {
			PrintWriter out= response.getWriter();
			out.println("<br><p style=\"font-size:12px\">");
			out.println("±£´æ³É¹¦");
			out.println("</p>");
			out.flush();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}
}