/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.info.neweditor;

import java.io.IOException;
import java.io.PrintWriter;
import java.math.BigDecimal;
import java.sql.SQLException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.mingda.common.ibatis.SqlMapper;
import com.mingda.common.ibatis.dao.InfoTFamilyincomeDAO;
import com.mingda.common.ibatis.dao.InfoTPayoutDAO;
import com.mingda.common.ibatis.data.InfoTFamilyincome;
import com.mingda.common.ibatis.data.InfoTPayout;

/**
 * MyEclipse Struts Creation date: 04-13-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 * @struts.action-forward name="result" path="/page/common/result.jsp"
 */
public class IncomesaveAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String str = "";
		SqlMapClient client = SqlMapper.getSqlMapper();
		try {

			client.startTransaction();

			InfoTFamilyincomeDAO infoTFamilyincomeDAO = new InfoTFamilyincomeDAO(
					client);

			InfoTPayoutDAO infoTPayoutDAO = new InfoTPayoutDAO(client);

			String familyId = request.getParameter("familyId");

			String payoutId = request.getParameter("payoutId");

			String incomeId = request.getParameter("incomeId");

			String income1 = request.getParameter("income1");

			String income2 = request.getParameter("income2");

			String income3 = request.getParameter("income3");

			String income4 = request.getParameter("income4");

			String income5 = request.getParameter("income5");

			String avgincome = request.getParameter("avgincome");
			
			if("" ==avgincome||null==avgincome){
				avgincome="0.0";
			}
			
			String allincome = request.getParameter("allincome");
			
			if("" ==allincome||null==allincome){
				allincome="0.0";
			}

			String payout1 = request.getParameter("payout1");

			String payout2 = request.getParameter("payout2");

			String payout3 = request.getParameter("payout3");

			String payout4 = request.getParameter("payout4");

			String payout5 = request.getParameter("payout5");

			String payout6 = request.getParameter("payout6");

			String payout7 = request.getParameter("payout7");

			String payout8 = request.getParameter("payout8");

			String payout9 = request.getParameter("payout9");

			InfoTPayout payout = new InfoTPayout();

			if (null != payoutId && !"".equals(payoutId)) {
				payout.setPayoutId(new Integer(payoutId));
			}

			payout.setFamilyId(new Integer(familyId));
			payout.setPayout1(new Double(payout1));
			payout.setPayout2(new Double(payout2));
			payout.setPayout3(new Double(payout3));
			payout.setPayout4(new Double(payout4));
			payout.setPayout5(new Double(payout5));
			payout.setPayout6(new Double(payout6));
			payout.setPayout7(new Double(payout7));
			payout.setPayout8(new Double(payout8));
			payout.setPayout9(new Double(payout9));

			if (null == payoutId || "".equals(payoutId)) {
				infoTPayoutDAO.insert(payout);
			} else {
				infoTPayoutDAO.update(payout);
			}

			InfoTFamilyincome income = new InfoTFamilyincome();

			if (null != incomeId && !"".equals(incomeId)) {
				income.setFamilyincomeId(new BigDecimal(incomeId));
			}
			income.setFamilyId(new BigDecimal(familyId));
			income.setAllincome(new Double(allincome));
			income.setAvgincome(new Double(avgincome));
			income.setIncome1(new Double(income1));
			income.setIncome2(new Double(income2));
			income.setIncome3(new Double(income3));
			income.setIncome4(new Double(income4));
			income.setIncome5(new Double(income5));

			if (null == incomeId || "".equals(incomeId)) {
				infoTFamilyincomeDAO.insert(income);
			} else {
				infoTFamilyincomeDAO.update(income);
			}

			client.commitTransaction();

			str = "以上各项收入合计：" + income.getAllincome() + "元        平均收入："
					+ income.getAvgincome() + "元";
			double a =payout.getPayout1().doubleValue()
					+ payout.getPayout2().doubleValue()
					+ payout.getPayout3().doubleValue()
					+ payout.getPayout4().doubleValue()
					+ payout.getPayout5().doubleValue()
					+ payout.getPayout6().doubleValue()
					+ payout.getPayout7().doubleValue()
					+ payout.getPayout8().doubleValue()
					+ payout.getPayout9().doubleValue();
			str = str + "<br>" + "以上各项支出合计:" + a + "元";
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				client.endTransaction();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		try {
			PrintWriter out = response.getWriter();
			out.println("<br><p style=\"font-size:12px\">");
			out.println(str);
			out.println("</p>");
			out.flush();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}
}