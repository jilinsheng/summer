/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.info.neweditor;

import java.util.Iterator;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.dom4j.Document;
import org.dom4j.Element;

import com.mingda.common.ConstantDefine;
import com.mingda.common.SessionFactory;
import com.mingda.common.classtype.ClassHandle;
import com.mingda.common.node.TreeHandle;
import com.mingda.common.node.TreeHandleImpl;
import com.mingda.common.page.PageView;
import com.mingda.entity.SysTEmployee;

/**
 * MyEclipse Struts Creation date: 04-17-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 * @struts.action-forward name="familysort"
 *                        path="/page/info/neweditor/familysort.jsp"
 */
public class FamilyclassAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession httpsession = request.getSession();
		SysTEmployee employee = (SysTEmployee) httpsession
				.getAttribute("employee");
		Long empid = employee.getEmployeeId();
		String code = request.getParameter("code");
		String codeId = request.getParameter("codeId");
		Document dictionary = (Document) this.servlet.getServletContext()
				.getAttribute("dictionary");

		// 从服务器中取出结构xml
		Document treedoc = (Document) servlet.getServletContext().getAttribute(
				"tree");
		TreeHandle tree = new TreeHandleImpl(treedoc);

		PageView pv = new PageView();
		ClassHandle ch = new ClassHandle();
		String str = "";
		try {
			Document familyclass = tree.selectEntities(code, new Long(codeId));
			Document famdoc = familyclass;
			familyclass = tree.saveEntity(ch.getClassType(familyclass, codeId,
					code), empid);
			familyclass = pv.writeTablebyXML(familyclass, dictionary, 1);
			Iterator it = familyclass.getRootElement().elementIterator();
			while (it.hasNext()) {
				Element tr = (Element) it.next();
				Element td = (Element) tr.elements().get(1);
				Element td0 = (Element) tr.elements().get(0);
				Element temp = (Element) famdoc.selectSingleNode("//" + code
						+ "/property[@title='" + td0.getText() + "']");
				String column = temp.attributeValue("column");
				Element span = (Element) td.elements().get(0);// 分类值
				if (span.getText().equals(ConstantDefine.CLASSSTATUS_NOCHN)) {
					familyclass.getRootElement().remove(tr);
				} else if (span.getText().equals(
						ConstantDefine.CLASSSTATUS_COMMITCHN)) {
					td.remove(span);
					td.addElement("span").addAttribute("id", "c").setText("未核实");
					td.addElement("span").addAttribute("style", "width:30").setText("");
					td.addElement("button").addAttribute("class", "btn").addAttribute("id", "b").addAttribute(
							"onclick",
							"ClassCommit(c,'" + code + "'," + codeId + ",'"
									+ column + "')").setText("确认");
				} else if (span.getText().equals(
						ConstantDefine.CLASSSTATUS_YESCHN)) {
					td.remove(span);
					td.addElement("span").addAttribute("id", "c").setText("已核实");
					td.addElement("span").addAttribute("style", "width:30").setText("");
					td.addElement("button").addAttribute("class", "btn").addAttribute("id", "b").addAttribute(
							"onclick",
							"ClassCommit(c,'" + code + "'," + codeId + ",'"
									+ column + "')").setText("取消");
				} else {
					familyclass.getRootElement().remove(tr);
				}
			}
			if (familyclass.getRootElement().elements().isEmpty()) {
				
				str = "<br><br><p align=\"center\">此家庭没有分类信息</p>";

			} else {

				str = "<table width=\"70%\" border=\"1\" class=\"table8\" cellpadding=\"0\" cellspacing=\"0\">"
						+ familyclass.getRootElement().asXML() + "</table>";
			}
			request.setAttribute("str", str);
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			SessionFactory.closeSession();
		}

		return mapping.findForward("familysort");
	}
}