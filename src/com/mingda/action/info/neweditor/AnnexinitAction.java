/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.info.neweditor;

import java.io.File;
import java.sql.SQLException;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.mingda.action.oa.FileUpload;
import com.mingda.common.ibatis.SqlMapper;
import com.mingda.common.ibatis.dao.InfoTAnnexDAO;
import com.mingda.common.ibatis.data.InfoTAnnex;

/**
 * MyEclipse Struts Creation date: 05-27-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class AnnexinitAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		String familyId = request.getParameter("familyId");
		String annexId = request.getParameter("annexId");
		String target = "INFO_T_FAMILY";

		SqlMapClient client = SqlMapper.getSqlMapper();
		try {
			client.startTransaction();
			InfoTAnnexDAO annexdao = new InfoTAnnexDAO(client);

			InfoTAnnex annex = new InfoTAnnex();

			if (null == annexId || "".equals(annexId)) {

			} else {

				annex.setAnnexId(new Integer(annexId));
				annex = annexdao.selectByPrimary(annex);
				FileUpload fu = new FileUpload();
				String inchpath = fu.isFileExists();
				File file = new File(inchpath + annex.getPath());
				if (file.exists()) {
					file.delete();
				}
				annexdao.deleteByPrimaryKey(new Integer(annexId));
			}
			annex.setTarget(target);
			annex.setRelationid(new Integer(familyId));
			List<InfoTAnnex> list = annexdao.selectByExample(annex);
			request.setAttribute("annexlist", list);
			request.setAttribute("familyId", familyId);
			client.commitTransaction();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				client.endTransaction();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}

		return mapping.findForward("annex");
	}
}