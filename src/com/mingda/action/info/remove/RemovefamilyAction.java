/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.info.remove;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.mingda.common.ibatis.SqlMapper;
import com.mingda.common.ibatis.dao.InfoTFamilyDAO;
import com.mingda.common.ibatis.data.InfoTFamily;
import com.mingda.entity.SysTEmployee;

/**
 * MyEclipse Struts Creation date: 08-20-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class RemovefamilyAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		SysTEmployee emp = (SysTEmployee) request.getSession().getAttribute(
				"employee");
		String familyId = request.getParameter("familyId");
		String finish = "删除家庭失败";
		SqlMapClient client = SqlMapper.getSqlMapper();
		try {
			
			InfoTFamilyDAO familyDAO = new InfoTFamilyDAO(client);
			client.startTransaction();

			boolean cnt = familyDAO.isRemove(familyId);

			if (cnt) {
				familyDAO.deleteOptcheck(familyId);
				InfoTFamily infoTFamily = new InfoTFamily();
				infoTFamily.setStatus("0");
				infoTFamily.setTohtml("1");
				infoTFamily.setFamilyId(new Integer(familyId));
				familyDAO.updateFamilySelective(infoTFamily);
				finish ="删除成功";
			} else {
				finish = "此家庭还有业务在审批中，请先结束业务审批，再删除家庭。";
			}
			client.commitTransaction();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				client.endTransaction();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		response.setContentType("text/html");
		response.setCharacterEncoding("GB18030");
		try {
			PrintWriter out = response.getWriter();
			out.write(finish);
			out.flush();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}
}