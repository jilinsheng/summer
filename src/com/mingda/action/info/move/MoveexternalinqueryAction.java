/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.info.move;

import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Session;
import org.hibernate.Transaction;

import com.mingda.common.SessionFactory;
import com.mingda.common.log4j.Log4jApp;
import com.mingda.entity.SysTEmployee;

/**
 * MyEclipse Struts Creation date: 08-25-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 * @struts.action-forward name="moveexternalinquery"
 *                        path="/page/info/move/moveexternalinquery.jsp"
 */
public class MoveexternalinqueryAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String type = request.getParameter("type");
		String value = request.getParameter("value");
		HttpSession hsession = request.getSession();
		SysTEmployee employee = (SysTEmployee) hsession
				.getAttribute("employee");
		String html = "";
		Session session = SessionFactory.getSession();
		Transaction tx = session.beginTransaction();
		try {

			String sql = "select  move.familymove_id, fam.family_id , fam.mastername ,org.fullname"
					+ " from info_t_family fam, "
					+ " biz_t_familymove move, sys_t_organization org "
					+ " where move.family_id = fam.family_id"
					+ " and move.isover = '0'"
					+ " and move.norgid = '"
					+ employee.getSysTOrganization().getOrganizationId()
					+ "'"
					+ " and org.organization_id = move.oorgid";
			if (type != null) {
				if (type.equals("mastername")) {
					sql += " and  fam.mastername like '%" + value + "%'";
				} else if (type.equals("paperid")) {
					sql += " and fam.masterpaperid='" + value + "'";
				} else if (type.equals("famno")) {
					sql += " and fam.familyno='" + value + "'";
				}
			}
			Log4jApp.logger("≤È—Ø«®»Î:" + sql);
			List list = session.createSQLQuery(sql).list();
			Iterator it = list.iterator();
			while (it.hasNext()) {
				Object[] obj = (Object[]) it.next();
				html += "<tr><td><input type=\"radio\" name=\"radio\" value=\"radio\" onclick=\"check("
						+ obj[0]
						+ ","
						+ obj[1]
						+ ")\"/></td><td>"
						+ obj[2]
						+ "</td><td>" + obj[3] + "</td></tr>";
			}
			tx.commit();
		} catch (RuntimeException re) {
			tx.rollback();
			re.printStackTrace();
		} finally {
			session.close();
		}
		request.setAttribute("html", html);
		return mapping.findForward("moveexternalinquery");
	}
}