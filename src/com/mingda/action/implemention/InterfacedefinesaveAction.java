/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.implemention;

import java.io.UnsupportedEncodingException;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.dom4j.Attribute;
import org.dom4j.Document;
import org.dom4j.DocumentHelper;
import org.dom4j.Element;
import org.hibernate.Session;
import org.hibernate.Transaction;
import com.mingda.common.SessionFactory;
import com.mingda.dao.ImplTInterfacedefineDAO;
import com.mingda.entity.ImplTInterfacedefine;
import com.mingda.entity.SysTEmployee;

/**
 * MyEclipse Struts Creation date: 11-14-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class InterfacedefinesaveAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	static Logger log = Logger.getLogger(InterfacedefinesaveAction.class);
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String xmlstr = request.getParameter("xmlstr");
		try {
			// 链接传过来的参数
			if (null == xmlstr || "".equals(xmlstr)) {

			} else {
				xmlstr = new String(xmlstr.getBytes("ISO-8859-1"), "GBK");
			}
		} catch (UnsupportedEncodingException e1) {
			e1.printStackTrace();
		}

		HttpSession httpsession = request.getSession();
		SysTEmployee employee = (SysTEmployee) httpsession
				.getAttribute("employee");

		Session session = SessionFactory.getSession();
		Transaction tx = session.beginTransaction();
		try {
			ImplTInterfacedefine impl = new ImplTInterfacedefine();
			ImplTInterfacedefineDAO impldao = new ImplTInterfacedefineDAO();
			log.debug("asdasd     "+xmlstr);
			Document xmldoc = DocumentHelper.parseText(xmlstr);
			xmldoc.setXMLEncoding("GB18030");
			impl.setDefdate(new Date());
			Element root = xmldoc.getRootElement();
			if (null == root.attributeValue("pk")
					|| "".equals(root.attributeValue("pk"))) {
				Long pk = impldao.getPk();
				impl.setInterfacedefineId(pk);
				Attribute att = root.attribute(0);
				att.setValue(pk.toString());

			} else {
				impl =impldao.findById(new Long(root.attributeValue("pk")));
			}
			impl.setDefname(root.attributeValue("title"));
			impl.setTemplate(xmldoc.asXML());
			impl.setEmployeeId(employee.getEmployeeId());
			impl.setOrganizationId(new Long(employee.getSysTOrganization()
					.getOrganizationId()));
			impl.setFiletype(root.attributeValue("id"));
			impldao.save(impl);
			tx.commit();
		} catch (Exception e) {
			tx.rollback();
			e.printStackTrace();
		} finally {
			session.close();
		}

		return null;
	}
}