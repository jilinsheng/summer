/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.querymanage;

import java.io.UnsupportedEncodingException;
import java.util.HashMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.dom4j.Document;

import com.mingda.common.Pager;
import com.mingda.common.myjdbc.ConnectionManager;

/**
 * MyEclipse Struts Creation date: 06-17-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 * @struts.action-forward name="infoqueryresult"
 *                        path="/page/querymanage/infoqueryresult.jsp"
 */
public class InfoqueryresultAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		HttpSession httpsession = request.getSession();

		String sql = request.getParameter("sql");
		String url = request.getParameter("url");
		String type = request.getParameter("type");
		String curpage = request.getParameter("cur_page");
		String checkbox = request.getParameter("checkbox");
		HashMap cols = null;
		Document doc = null;
		Pager page = null;
		try {
			if (sql == null) {
				sql = (String) httpsession.getAttribute("sql");
			} else {
				sql = new String(sql.getBytes("8859_1"), "GB18030");
				request.setAttribute("isfirst", "1");
			}
			if (url == null) {
				url = (String) httpsession.getAttribute("url");
			}
			if (type == null) {
				type = (String) httpsession.getAttribute("type");
			}
			if (checkbox == null) {
				checkbox = (String) httpsession.getAttribute("checkbox");
			}
			Document dictionary = (Document) this.servlet.getServletContext()
					.getAttribute("dictionary");
			Document tree = (Document) this.servlet.getServletContext()
					.getAttribute("tree");
			// sql = new String(sql.getBytes("8859_1"), "GB18030");
			page = new QueryResult().getFamilyResult(sql, tree, dictionary,
					type, curpage, checkbox);
			doc = page.getDoc();
			cols = page.getColname();
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}finally{
			ConnectionManager.closeQuietly();
		}
		request.setAttribute("url", url);
		httpsession.setAttribute("sql", sql);
		httpsession.setAttribute("cols", cols);
		httpsession.setAttribute("url", url);
		httpsession.setAttribute("type", type);
		httpsession.setAttribute("checkbox", checkbox);
		request.setAttribute("familylist", doc.getRootElement().asXML());
		request.setAttribute("tools", page.getToolsMenu());
		request.setAttribute("all", page.getAll());
		request.setAttribute("colspan", page.getColsnum());
		return mapping.findForward("infoqueryresult");
	}
}