/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.policy.query;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Session;
import org.hibernate.Transaction;

import com.mingda.common.SessionFactory;
import com.mingda.common.implemention.BillmonthHandle;
import com.mingda.dao.SysTOrganizationDAO;
import com.mingda.entity.SysTEmployee;

/**
 * MyEclipse Struts Creation date: 02-24-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 * @struts.action-forward name="statpolicyfamily"
 *                        path="/page/policy/query/statpolicyfamily.jsp"
 */
public class StatPolicyFamilyAction extends Action {
	static Logger log = Logger.getLogger(StatPolicyFamilyAction.class);

	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@SuppressWarnings("unchecked")
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		String monthname = request.getParameter("monthname");
		String orgid = request.getParameter("orgid");
		String policyId = request.getParameter("policyId");
		HttpSession hsession = request.getSession();

		List<Object[]> rs = null;

		Session session = SessionFactory.getSession();
		Transaction tx = session.beginTransaction();
		String sql = "";
		try {
			String accyear = monthname.substring(0, 4);
			String accmonth = monthname.substring(4);

			String sorgid = orgid;
			if (sorgid.length() >= 6) {
				sorgid = sorgid.substring(0, 6);
				sorgid = " and b.organization_id='" + sorgid + "'";
			} else {
				sorgid = "and instr( 'a'||b.organization_id ,'a'||'" + sorgid
						+ "')>0";
			}
			sql = "select count(1) as hs, "
					+ " sum(f.ensurecount) as rs, "
					+ "  sum(a.countmoney) as zm, "
					+ " (select org.orgname "
					+ " from sys_t_organization org "
					+ " where org.organization_id = ooo.organization_id) as orgname, "
					+ " sum(decode(f.dessaltype, 876, 1, 0)) c1, "// 4
					+ " sum(decode(f.dessaltype, 877, 1, 0)) c2, "// 5
					+ " sum(decode(f.dessaltype, 878, 1, 0)) c3, "// 6
					+ " sum(decode(f.dessaltype, 873, 1, 0)) c4, "// 7
					+ " sum(decode(f.dessaltype, 874, 1, 0)) c5, "// 8
					+ " sum(decode(f.dessaltype, 875, 1, 0)) c6 ,"// 9
					+ " sum(decode(f.dessaltype, 879, 1, 0)) c7 ,"// 10
					+ " sum(decode(f.dessaltype, 876, f.ensurecount ,0)) r1, "// 11
					+ " sum(decode(f.dessaltype, 877, f.ensurecount ,0)) r2, "
					+ " sum(decode(f.dessaltype, 878, f.ensurecount ,0)) r3, "
					+ " sum(decode(f.dessaltype, 873, f.ensurecount ,0)) r4, "
					+ " sum(decode(f.dessaltype, 874, f.ensurecount ,0)) r5, "
					+ " sum(decode(f.dessaltype, 875, f.ensurecount ,0)) r6 ,"
					+ " sum(decode(f.dessaltype, 879, f.ensurecount ,0)) r7 ,"
					+ " sum(decode(f.dessaltype, 876, a.countmoney,0)) m1, "// 18
					+ " sum(decode(f.dessaltype, 877, a.countmoney,0)) m2, "
					+ " sum(decode(f.dessaltype, 878, a.countmoney,0)) m3, "
					+ " sum(decode(f.dessaltype, 873, a.countmoney,0)) m4, "
					+ " sum(decode(f.dessaltype, 874, a.countmoney,0)) m5, "
					+ " sum(decode(f.dessaltype, 875, a.countmoney,0)) m6 ,"
					+ " sum(decode(f.dessaltype, 879, a.countmoney,0)) m7 "
					+ " from impl_t_accoptcheck a, "
					+ " info_t_family      f, " + " biz_t_optacc       b, "
					+ " sys_t_organization ooo, " + " info_t_familyclass c "
					+ " where f.family_id = a.family_id "
					+ " and f.status ='1' and c.family_id = f.family_id "
					+ " and a.policy_id = '" + policyId + "' "
					+ " and b.optacc_id = a.optacc_id " + " and b.accyear = '"
					+ accyear + "' " + " and b.accmonth = '" + accmonth + "' "
					+ sorgid
					+ " and f.familyno like ooo.organization_id || '%'  "
					+ "and f.organization_id like ooo.organization_id || '%' "
					+ " and (ooo.parentorgid = '" + orgid
					+ "' or ooo.organization_id = '" + orgid + "') "
					+ " group by ooo.organization_id "
					+ " order by ooo.organization_id";
			log.error("ywe>>>" + sql);
			HashMap cols = new HashMap();
			cols.put(3, "地区");
			cols.put(0, "户数");
			cols.put(1, "人数");
			cols.put(2, "金额");

			cols.put(4, "重点户一档  户数");
			cols.put(11, "重点户一档  人数");
			cols.put(18, "重点户一档  金额");

			cols.put(5, "重点户二档  户数");
			cols.put(12, "重点户二档  人数");
			cols.put(19, "重点户二档  金额");

			cols.put(6, "重点户三档  户数");
			cols.put(13, "重点户三档  人数");
			cols.put(20, "重点户三档  金额");

			cols.put(7, "一般户一档  户数");
			cols.put(14, "一般户一档  人数");
			cols.put(21, "一般户一档  金额");

			cols.put(8, "一般户二档  户数");
			cols.put(15, "一般户二档  人数");
			cols.put(22, "一般户二档  金额");

			cols.put(9, "一般户三档  户数");
			cols.put(16, "一般户三档  人数");
			cols.put(23, "一般户三档  金额");

			cols.put(10, "无保障类型  户数");
			cols.put(17, "无保障类型  人数");
			cols.put(24, "无保障类型  金额");

			hsession.setAttribute("cols", cols);
			hsession.setAttribute("sql", sql);

			rs = session.createSQLQuery(sql).list();

			StringBuffer html = new StringBuffer();
			for (Object[] o : rs) {
				html.append("<tr>");
				html.append("<td>" + o[3].toString() + "</td>");
				html.append("<td>" + o[0].toString() + "</td>");
				html.append("<td>" + o[1].toString() + "</td>");
				html.append("<td>" + o[2].toString() + "</td>");

				html.append("<td>" + o[4].toString() + "</td>");
				html.append("<td>" + o[11].toString() + "</td>");
				html.append("<td>" + o[18].toString() + "</td>");

				html.append("<td>" + o[5].toString() + "</td>");
				html.append("<td>" + o[12].toString() + "</td>");
				html.append("<td>" + o[19].toString() + "</td>");

				html.append("<td>" + o[6].toString() + "</td>");
				html.append("<td>" + o[13].toString() + "</td>");
				html.append("<td>" + o[20].toString() + "</td>");

				html.append("<td>" + o[7].toString() + "</td>");
				html.append("<td>" + o[14].toString() + "</td>");
				html.append("<td>" + o[21].toString() + "</td>");

				html.append("<td>" + o[8].toString() + "</td>");
				html.append("<td>" + o[15].toString() + "</td>");
				html.append("<td>" + o[22].toString() + "</td>");

				html.append("<td>" + o[9].toString() + "</td>");
				html.append("<td>" + o[16].toString() + "</td>");
				html.append("<td>" + o[23].toString() + "</td>");

				html.append("<td>" + o[10].toString() + "</td>");
				html.append("<td>" + o[17].toString() + "</td>");
				html.append("<td>" + o[24].toString() + "</td>");

				html.append("<tr>");
			}
			request.setAttribute("html", html);

			request.setAttribute("monthname", monthname);
			request.setAttribute("policyId", policyId);
			BillmonthHandle billmonthhandle = new BillmonthHandle();
			request.setAttribute("monlist",
					billmonthhandle.getAccMonth("2", "1"));

			HttpSession httpsession = request.getSession();
			SysTEmployee employee = (SysTEmployee) httpsession
					.getAttribute("employee");
			SysTOrganizationDAO organdao = new SysTOrganizationDAO();
			request.setAttribute("orglist", organdao.findByParentId(employee
					.getSysTOrganization().getOrganizationId()));
			tx.commit();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			session.close();
		}

		return mapping.findForward("statpolicyfamily");
	}
}