/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mingda.action.policy.demurral;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Session;

import com.mingda.common.Pager;
import com.mingda.common.SessionFactory;
import com.mingda.dao.SysTOrganizationDAO;
import com.mingda.entity.SysTEmployee;

/**
 * MyEclipse Struts Creation date: 03-06-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 * @struts.action-forward name="demurralquery"
 *                        path="/page/policy/demurral/demurralquery.jsp"
 */
public class DemurralqueryAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	static Logger log = Logger.getLogger(DemurralqueryinitAction.class);

	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		String orgid = request.getParameter("orgid");
		String policyId = request.getParameter("policyId");
		HttpSession hsession = request.getSession();
		Session session = SessionFactory.getSession();

		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;

		String curpage = request.getParameter("cur_page");
		String sql = "";
		String type = "";
		String value = "";

		try {
			conn = session.connection();
			int totalrow = 0;
			Pager page = null;
			if (curpage == null || curpage.equals("")) {

				value = request.getParameter("value");
				type = request.getParameter("type");

				sql = "select f.mastername, "
						+ " f.family_id, "
						+ " f.organization_id, "
						+ " f.familyno, "
						+ " f.rpraddress, "
						+ " f.population, "
						+ " f.famaddress, "
						+ " s.policy_id, "
						+ " s.money , "
						+ " (select count(1) "
						+ "from biz_t_demurral d "
						+ "where d.familystatus_id = s.familystatus_id) as demurral"
						+ " ,(select org.fullname from sys_t_organization org "
						+ "where org.organization_id =f.organization_id)  as orgname"
						+ "  ,s.familystatus_id"
						+ " from info_t_family f, biz_t_familystatus s "
						+ " where f.family_id = s.family_id "
						+ " and f.organization_id like '" + orgid + "%' "
						+ " and s.policy_id = '" + policyId + "' "
						+ " and s.flag = '2' ";

				if (type != null) {
					if (type.equals("mastername")) {
						sql += " and  f.mastername like '%" + value + "%'";
					} else if (type.equals("paperid")) {
						sql += " and f.masterpaperid='" + value + "'";
					} else if (type.equals("famno")) {
						sql += " and f.familyno='" + value + "'";
					}
				}
				sql = sql + " order by f.familyno ";

				log.debug("账单查询语句:" + sql);
				pstmt = conn.prepareStatement("select count(1) from ( " + sql
						+ " )");
				hsession.setAttribute("sql", sql);
				rs = pstmt.executeQuery();
				if (rs.next()) {
					totalrow = rs.getInt(1);
				}
				page = new Pager(totalrow, new Long(1).intValue(), "0");
				pstmt = conn
						.prepareStatement("select * from (select mytab.*, rownum row_num from ("
								+ sql
								+ ") mytab) where row_num between "
								+ page.getBeiginrow()
								+ " and "
								+ page.getEndrow());
				rs = pstmt.executeQuery();
			} else {
				sql = (String) hsession.getAttribute("sql");
				pstmt = conn.prepareStatement("select count(1) from ( " + sql
						+ " )");
				rs = pstmt.executeQuery();
				if (rs.next()) {
					totalrow = rs.getInt(1);
				}
				page = new Pager(totalrow, new Long(curpage).intValue(), "0");
				pstmt = conn
						.prepareStatement("select * from (select mytab.*, rownum row_num from ("
								+ sql
								+ ") mytab) where row_num between "
								+ page.getBeiginrow()
								+ " and "
								+ page.getEndrow());
				rs = pstmt.executeQuery();
			}
			page.setUrl("demurralquery.do?&orgid=" + orgid + "&policyId="
					+ policyId);
			String html = "";
			while (rs.next()) {
				String demurral = "";
				if ("0".equals(rs.getString("demurral"))) {
					demurral = "无异议";
				} else {
					demurral = "有异议";
				}
				html += "<tr><td><a style=\"text-decoration:none\" href=\"/db/page/info/card/newfamilyinfocard.do?entityId="
						+ rs.getString("family_id")
						+ "\" target=\"_blank\">"
						+ rs.getString("familyno")
						+ "</a></td><td>"
						+ rs.getString("mastername")
						+ "</td><td>"
						+ rs.getString("money")
						+ "</td><td>"
						+ rs.getString("orgname")
						+ "</td><td>"
						+ demurral
						+ "</td><td><a href=\"demurralview.do?ssid="+rs.getString("familystatus_id")+"\" target=\"_blank\">浏览&添加</a>" 
						+ "</td></tr>";
			}
			request.setAttribute("html", html);
			request.setAttribute("toolsmenu", page.getToolsMenu());

			request.setAttribute("policyId", policyId);

			HttpSession httpsession = request.getSession();
			SysTEmployee employee = (SysTEmployee) httpsession
					.getAttribute("employee");
			SysTOrganizationDAO organdao = new SysTOrganizationDAO();
			request.setAttribute("orglist", organdao.findByParentId(employee
					.getSysTOrganization().getOrganizationId()));

		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if (rs != null) {
					rs.close();
				}
				if (pstmt != null) {
					pstmt.close();
				}
				if (conn != null) {
					conn.close();
				}
			} catch (SQLException e) {
				e.printStackTrace();
			}
			session.close();
		}

		return mapping.findForward("demurralquery");
	}
}